name: Build README and deploy Datasette

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        # We need full history to introspect created/updated:
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4  # Updated to v4
        with:
          python-version: '3.12'  # Updated to a newer Python version
      - uses: actions/cache@v3  # Updated to v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build database
        run: python build_database.py
      - name: Update README
        run: |-
          python update_readme.py --rewrite
          cat README.md
      - name: Commit and push if README changed
        run: |-
          git diff
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git diff --quiet || (git add README.md && git commit -m "Updated README")
          git push
      # - name: Setup Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '12.x'
      # - name: Deploy Datasette using Zeit Now
      #   env:
      #     NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
      #   run: |-
      #     datasette publish now til.db \
      #       --token $NOW_TOKEN \
      #       --project til \
      #       --metadata metadata.json \
      #       --install py-gfm \
      #       --install datasette-render-markdown \
      #       --install datasette-template-sql \
      #       --template-dir templates
